{"version":3,"sources":["actions/resetPasswordEmail.js","pages/ForgotPassword.js"],"names":["resetPasswordEmail","email","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","cancelToken","source","wrap","_context","prev","next","type","axios","CancelToken","post","token","t0","payload","response","data","message","stop","_x","apply","this","arguments","StyledForgot","styled","div","_templateObject","taggedTemplateLiteral","ForgotPassword","useDispatch","_useState","useState","_useState2","slicedToArray","emailValue","setEmailValue","_useSelector","useSelector","state","userInfo","error","resetLoading","user","sent","history","useHistory","useEffect","name","push","_useState3","setWarning","react_default","createElement","Fragment","Goback","providedClassName","PopupMessage","timer","desc","title","className","vibrating","visiblity","msg","includes","onSubmit","e","preventDefault","htmlFor","onChange","target","value","id","xSign","onClick","style","display","concat","length","loader"],"mappings":"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","file":"static/js/23.78b050dd.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst resetPasswordEmail = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'RESET_PASSWORD_REQUEST' })\r\n    const cancelToken = axios.CancelToken\r\n    const source = cancelToken.source()\r\n\r\n    await axios.post(\r\n      '/api/users/resetPasswordEmail',\r\n      {\r\n        email,\r\n      },\r\n      { cancelToken: source.token }\r\n    )\r\n\r\n    dispatch({ type: 'RESET_PASSWORD_SUCCESS' })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'RESET_PASSWORD_FAIL',\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport default resetPasswordEmail\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ReactComponent as XSign } from '../img/xSign.svg'\r\nimport Message from '../components/message'\r\nimport Loader from '../components/loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport resetPasswordEmail from '../actions/resetPasswordEmail'\r\nimport Goback from '../components/Goback'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PopupMessage from '../components/PopupMessage'\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch()\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(resetPasswordEmail(emailValue))\r\n  }\r\n  const { error, resetLoading, user, sent } = useSelector(\r\n    (state) => state.userInfo\r\n  )\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (user.name) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n  const [setWarning] = useState(false)\r\n  return (\r\n    <>\r\n      <Goback providedClassName={'goBackForgotPassword'} />\r\n      {sent && (\r\n        <PopupMessage\r\n          setWarning={setWarning}\r\n          timer={5}\r\n          desc={\r\n            <p>\r\n              Check Your email to verify It's you\r\n              <br /> and Reset your Password\r\n            </p>\r\n          }\r\n          title='Email Sent'\r\n          type={'ok'}\r\n        />\r\n      )}\r\n      <StyledForgot>\r\n        <div className='cont'>\r\n          <h1>Forgot Password</h1>\r\n          <Message\r\n            vibrating='true'\r\n            visiblity={error ? true : false}\r\n            msg={\r\n              error\r\n                ? error.includes('timed out')\r\n                  ? 'Network Error'\r\n                  : error.includes('mongo')\r\n                  ? 'Server Error'\r\n                  : error\r\n                : ''\r\n            }\r\n            type='error'\r\n          />\r\n          <form onSubmit={submitHandler}>\r\n            <label htmlFor='email'>Email</label>\r\n            <div className='email'>\r\n              <input\r\n                onChange={(e) => setEmailValue(e.target.value)}\r\n                value={emailValue}\r\n                type='text'\r\n                id='email'\r\n              />\r\n              <XSign\r\n                onClick={() => setEmailValue('')}\r\n                style={{ display: `${emailValue.length ? 'block' : 'none'}` }}\r\n                className='xSign2'\r\n              />\r\n            </div>\r\n            <button type='submit'>\r\n              Send\r\n              {resetLoading && <Loader />}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </StyledForgot>\r\n    </>\r\n  )\r\n}\r\nconst StyledForgot = styled.div`\r\n  .cont {\r\n    margin-top: clamp(20px, 14vh, 80px);\r\n    width: 35%;\r\n    max-width: 606px;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  .xSign2 {\r\n    position: absolute;\r\n    right: 0%;\r\n    top: 50%;\r\n    transform: translate(-50%, -70%);\r\n    width: calc(0.75rem + 1vw);\r\n    cursor: pointer;\r\n    padding: 0.2rem;\r\n  }\r\n  h1 {\r\n    color: #1a1a1a;\r\n    font-weight: 500;\r\n    font-size: calc(2rem + 1vw);\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    justify-content: center;\r\n    margin-bottom: 0.5rem;\r\n    margin-top: 0.3rem;\r\n\r\n    .email {\r\n      position: relative;\r\n      img {\r\n      }\r\n      input {\r\n        width: 100%;\r\n        background: #f3f3f3;\r\n        border: none;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 6px;\r\n        width: 100%;\r\n        font-size: calc(1rem + 0.3vw);\r\n      }\r\n    }\r\n    label {\r\n      font-size: calc(1rem + 0.3vw);\r\n      color: #343a40;\r\n    }\r\n    button {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 0.35rem 1.2rem;\r\n      border: none;\r\n      background: #00b2d8;\r\n      color: white;\r\n      border-radius: 6px;\r\n      font-size: calc(1.2rem + 0.3vw);\r\n      cursor: pointer;\r\n      transition: 0.1s;\r\n      &:hover {\r\n        background: #00a8ce;\r\n      }\r\n      #loader:first-child {\r\n        width: calc(0.9rem + 0.5vw);\r\n        height: calc(0.9rem + 0.5vw);\r\n        margin-left: 0.45rem;\r\n        #greybackground path {\r\n          stroke: white;\r\n        }\r\n      }\r\n    }\r\n    #email,\r\n    #password {\r\n      margin-bottom: 1rem;\r\n      margin-top: 0.3rem;\r\n      padding-right: 2.8rem;\r\n    }\r\n    #password {\r\n      margin-bottom: 0rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1050px) {\r\n    .cont {\r\n      width: 90%;\r\n    }\r\n    .xSign2 {\r\n      transform: translate(-50%, -24%) !important;\r\n      width: calc(2rem + 1vw);\r\n      cursor: pointer;\r\n      padding: 0.6rem;\r\n      transform: translate(-12%, -65%) !important;\r\n    }\r\n    form {\r\n      align-items: stretch;\r\n    }\r\n    button {\r\n      align-self: flex-start;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ForgotPassword\r\n"],"sourceRoot":""}