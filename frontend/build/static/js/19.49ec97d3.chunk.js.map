{"version":3,"sources":["actions/resetPasswordEmail.js","pages/ForgotPassword.js"],"names":["resetPasswordEmail","email","dispatch","a","type","cancelToken","axios","CancelToken","source","post","token","payload","response","data","message","StyledForgot","styled","div","ForgotPassword","useDispatch","useState","emailValue","setEmailValue","useSelector","state","userInfo","error","resetLoading","user","sent","history","useHistory","useEffect","name","push","setWarning","Goback","providedClassName","PopupMessage","timer","desc","title","className","vibrating","visiblity","msg","includes","onSubmit","e","preventDefault","htmlFor","onChange","target","value","id","onClick","style","display","length"],"mappings":"wNA2BeA,EAzBY,SAACC,GAAD,8CAAW,WAAOC,GAAP,iBAAAC,EAAA,sEAElCD,EAAS,CAAEE,KAAM,2BACXC,EAAcC,IAAMC,YACpBC,EAASH,EAAYG,SAJO,SAM5BF,IAAMG,KACV,gCACA,CACER,SAEF,CAAEI,YAAaG,EAAOE,QAXU,OAclCR,EAAS,CAAEE,KAAM,2BAdiB,gDAgBlCF,EAAS,CACPE,KAAM,sBACNO,QACE,KAAMC,UAAY,KAAMA,SAASC,KAAKC,QAClC,KAAMF,SAASC,KAAKC,QACpB,KAAMA,UArBoB,yDAAX,uD,+BCsFrBC,EAAeC,IAAOC,IAAV,srEAyGHC,UAtLQ,WACrB,IAAMhB,EAAWiB,cADU,EAESC,mBAAS,IAFlB,mBAEpBC,EAFoB,KAERC,EAFQ,OAOiBC,aAC1C,SAACC,GAAD,OAAWA,EAAMC,YADXC,EAPmB,EAOnBA,MAAOC,EAPY,EAOZA,aAAcC,EAPF,EAOEA,KAAMC,EAPR,EAOQA,KAG7BC,EAAUC,cAEhBC,qBAAU,WACJJ,EAAKK,MACPH,EAAQI,KAAK,OAEd,CAACN,IAhBuB,MAiBNR,oBAAS,GAAvBe,EAjBoB,oBAkB3B,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,kBAAmB,yBAC1BR,GACC,cAACS,EAAA,EAAD,CACEH,WAAYA,EACZI,MAAO,EACPC,KACE,oEAEE,uBAFF,8BAKFC,MAAM,aACNrC,KAAM,OAGV,cAACW,EAAD,UACE,sBAAK2B,UAAU,OAAf,UACE,iDACA,cAAC,IAAD,CACEC,UAAU,OACVC,YAAWlB,EACXmB,IACEnB,EACIA,EAAMoB,SAAS,aACb,gBACApB,EAAMoB,SAAS,SACf,eACApB,EACF,GAENtB,KAAK,UAEP,uBAAM2C,SAjDQ,SAACC,GACrBA,EAAEC,iBACF/C,EAASF,EAAmBqB,KA+CtB,UACE,uBAAO6B,QAAQ,QAAf,mBACA,sBAAKR,UAAU,QAAf,UACE,uBACES,SAAU,SAACH,GAAD,OAAO1B,EAAc0B,EAAEI,OAAOC,QACxCA,MAAOhC,EACPjB,KAAK,OACLkD,GAAG,UAEL,cAAC,IAAD,CACEC,QAAS,kBAAMjC,EAAc,KAC7BkC,MAAO,CAAEC,QAAQ,GAAD,OAAKpC,EAAWqC,OAAS,QAAU,SACnDhB,UAAU,cAGd,yBAAQtC,KAAK,SAAb,iBAEGuB,GAAgB,cAAC,IAAD","file":"static/js/19.49ec97d3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst resetPasswordEmail = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'RESET_PASSWORD_REQUEST' })\r\n    const cancelToken = axios.CancelToken\r\n    const source = cancelToken.source()\r\n\r\n    await axios.post(\r\n      '/api/users/resetPasswordEmail',\r\n      {\r\n        email,\r\n      },\r\n      { cancelToken: source.token }\r\n    )\r\n\r\n    dispatch({ type: 'RESET_PASSWORD_SUCCESS' })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'RESET_PASSWORD_FAIL',\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport default resetPasswordEmail\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ReactComponent as XSign } from '../img/xSign.svg'\r\nimport Message from '../components/message'\r\nimport Loader from '../components/loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport resetPasswordEmail from '../actions/resetPasswordEmail'\r\nimport Goback from '../components/Goback'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PopupMessage from '../components/PopupMessage'\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch()\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(resetPasswordEmail(emailValue))\r\n  }\r\n  const { error, resetLoading, user, sent } = useSelector(\r\n    (state) => state.userInfo\r\n  )\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (user.name) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n  const [setWarning] = useState(false)\r\n  return (\r\n    <>\r\n      <Goback providedClassName={'goBackForgotPassword'} />\r\n      {sent && (\r\n        <PopupMessage\r\n          setWarning={setWarning}\r\n          timer={5}\r\n          desc={\r\n            <p>\r\n              Check Your email to verify It's you\r\n              <br /> and Reset your Password\r\n            </p>\r\n          }\r\n          title='Email Sent'\r\n          type={'ok'}\r\n        />\r\n      )}\r\n      <StyledForgot>\r\n        <div className='cont'>\r\n          <h1>Forgot Password</h1>\r\n          <Message\r\n            vibrating='true'\r\n            visiblity={error ? true : false}\r\n            msg={\r\n              error\r\n                ? error.includes('timed out')\r\n                  ? 'Network Error'\r\n                  : error.includes('mongo')\r\n                  ? 'Server Error'\r\n                  : error\r\n                : ''\r\n            }\r\n            type='error'\r\n          />\r\n          <form onSubmit={submitHandler}>\r\n            <label htmlFor='email'>Email</label>\r\n            <div className='email'>\r\n              <input\r\n                onChange={(e) => setEmailValue(e.target.value)}\r\n                value={emailValue}\r\n                type='text'\r\n                id='email'\r\n              />\r\n              <XSign\r\n                onClick={() => setEmailValue('')}\r\n                style={{ display: `${emailValue.length ? 'block' : 'none'}` }}\r\n                className='xSign2'\r\n              />\r\n            </div>\r\n            <button type='submit'>\r\n              Send\r\n              {resetLoading && <Loader />}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </StyledForgot>\r\n    </>\r\n  )\r\n}\r\nconst StyledForgot = styled.div`\r\n  .cont {\r\n    margin-top: clamp(20px, 14vh, 80px);\r\n    width: 35%;\r\n    max-width: 606px;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  .xSign2 {\r\n    position: absolute;\r\n    right: 0%;\r\n    top: 50%;\r\n    transform: translate(-50%, -70%);\r\n    width: calc(0.75rem + 1vw);\r\n    cursor: pointer;\r\n    padding: 0.2rem;\r\n  }\r\n  h1 {\r\n    color: #1a1a1a;\r\n    font-weight: 500;\r\n    font-size: calc(2rem + 1vw);\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    justify-content: center;\r\n    margin-bottom: 0.5rem;\r\n    margin-top: 0.3rem;\r\n\r\n    .email {\r\n      position: relative;\r\n      img {\r\n      }\r\n      input {\r\n        width: 100%;\r\n        background: #f3f3f3;\r\n        border: none;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 6px;\r\n        width: 100%;\r\n        font-size: calc(1rem + 0.3vw);\r\n      }\r\n    }\r\n    label {\r\n      font-size: calc(1rem + 0.3vw);\r\n      color: #343a40;\r\n    }\r\n    button {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 0.35rem 1.2rem;\r\n      border: none;\r\n      background: #00b2d8;\r\n      color: white;\r\n      border-radius: 6px;\r\n      font-size: calc(1.2rem + 0.3vw);\r\n      cursor: pointer;\r\n      transition: 0.1s;\r\n      &:hover {\r\n        background: #00a8ce;\r\n      }\r\n      #loader:first-child {\r\n        width: calc(0.9rem + 0.5vw);\r\n        height: calc(0.9rem + 0.5vw);\r\n        margin-left: 0.45rem;\r\n        #greybackground path {\r\n          stroke: white;\r\n        }\r\n      }\r\n    }\r\n    #email,\r\n    #password {\r\n      margin-bottom: 1rem;\r\n      margin-top: 0.3rem;\r\n      padding-right: 2.8rem;\r\n    }\r\n    #password {\r\n      margin-bottom: 0rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1050px) {\r\n    .cont {\r\n      width: 90%;\r\n    }\r\n    .xSign2 {\r\n      transform: translate(-50%, -24%) !important;\r\n      width: calc(2rem + 1vw);\r\n      cursor: pointer;\r\n      padding: 0.6rem;\r\n      transform: translate(-12%, -65%) !important;\r\n    }\r\n    form {\r\n      align-items: stretch;\r\n    }\r\n    button {\r\n      align-self: flex-start;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ForgotPassword\r\n"],"sourceRoot":""}