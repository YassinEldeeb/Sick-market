{"version":3,"sources":["actions/resetPassword.js","pages/ResetPassword.js"],"names":["resetPassword","password","token","dispatch","a","type","cancelToken","axios","CancelToken","source","config","headers","Content_Type","Authorization","post","payload","response","data","message","StyledReset","styled","div","ResetPassword","inputRef","useRef","inputRef2","useSelector","state","userInfo","reset2Loading","error","reset","user","useState","passwordValue","setPasswordValue","confirmPasswordValue","setConfirmPasswordValue","confirmPasswordValid","setConfirmPasswordValid","show","setShow","useDispatch","location","useLocation","history","useHistory","search","split","useEffect","push","name","className","vibrating","visiblity","msg","includes","to","onSubmit","e","preventDefault","htmlFor","ref","value","id","onChange","target","style","display","src","closedEye","alt","draggable","onClick","current","focus","setTimeout","selectionStart","selectionEnd","eye"],"mappings":"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","file":"static/js/11.0dc5c569.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst resetPassword = (password, token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"RESET_PASSWORD_STEP2_REQUEST\" })\r\n\r\n    const cancelToken = axios.CancelToken\r\n    const source = cancelToken.source()\r\n    const config = {\r\n      headers: {\r\n        Content_Type: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      cancelToken: source.token,\r\n    }\r\n    await axios.post(\r\n      \"/api/users/resetPassword\",\r\n      {\r\n        password,\r\n      },\r\n      config\r\n    )\r\n\r\n    dispatch({ type: \"RESET_PASSWORD_STEP2_SUCCESS\" })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"RESET_PASSWORD_STEP2_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport default resetPassword\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport closedEye from \"../img/closedEye.svg\"\r\nimport eye from \"../img/eye.svg\"\r\nimport Message from \"../components/message\"\r\nimport Loader from \"../components/loader\"\r\nimport resetPassword from \"../actions/resetPassword\"\r\nimport { useHistory, useLocation, Link } from \"react-router-dom\"\r\n\r\nconst ResetPassword = () => {\r\n  const inputRef = useRef(null)\r\n  const inputRef2 = useRef(null)\r\n  const { reset2Loading, error, reset, user } = useSelector(\r\n    (state) => state.userInfo\r\n  )\r\n\r\n  const [passwordValue, setPasswordValue] = useState(\"\")\r\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState(\"\")\r\n  const [confirmPasswordValid, setConfirmPasswordValid] = useState(\"\")\r\n  const [show, setShow] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const token = location.search.split(\"=\")[1]\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      history.push(\"/forgotPassword\")\r\n    }\r\n  }, [])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    setConfirmPasswordValid(\"\")\r\n    if (!confirmPasswordValue || !passwordValue) {\r\n      setConfirmPasswordValid(\"Password & Confirm Password are required\")\r\n      return\r\n    } else if (confirmPasswordValue !== passwordValue) {\r\n      setConfirmPasswordValid(\"Password & Confirm Password don't match\")\r\n      return\r\n    } else {\r\n      setConfirmPasswordValid(\"\")\r\n      dispatch(resetPassword(passwordValue, token))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (reset) history.push(\"/login\")\r\n  }, [history, reset])\r\n\r\n  useEffect(() => {\r\n    if (user.name) {\r\n      history.push(\"/\")\r\n    }\r\n  }, [user])\r\n  const messageError = () => {\r\n    if (confirmPasswordValid) {\r\n      return confirmPasswordValid\r\n    } else if (error) {\r\n      if (error.includes(\"timed out\")) {\r\n        return \"Network Error\"\r\n      } else if (error.includes(\"mongo\")) {\r\n        return \"Server Error\"\r\n      } else if (\r\n        error.includes(\"jwt expired\") ||\r\n        error.includes(\"Link Expired\")\r\n      ) {\r\n        return (\r\n          <p>\r\n            Send a Reset Password Email at{\" \"}\r\n            <Link className='ForgotLink' to='forgotPassword'>\r\n              Forgot Password\r\n            </Link>\r\n          </p>\r\n        )\r\n      } else {\r\n        return error\r\n      }\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n  return (\r\n    <StyledReset>\r\n      <div className='content'>\r\n        <h1>Reset Password</h1>\r\n        <Message\r\n          vibrating='true'\r\n          visiblity={\r\n            confirmPasswordValid ? confirmPasswordValid : error ? true : false\r\n          }\r\n          msg={messageError()}\r\n          type='error'\r\n        />\r\n        <form onSubmit={submitHandler}>\r\n          <div className='password'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              ref={inputRef}\r\n              value={passwordValue}\r\n              id='password'\r\n              type={`${show ? \"text\" : \"password\"}`}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n            />\r\n            <img\r\n              style={{ display: `${show ? \"none\" : \"block\"}` }}\r\n              className='eye eye1'\r\n              src={closedEye}\r\n              alt='closedEye'\r\n              draggable='false'\r\n              onClick={() => {\r\n                inputRef.current.focus()\r\n                setShow(!show)\r\n                setTimeout(function () {\r\n                  inputRef.current.selectionStart = inputRef.current.selectionEnd = 10000\r\n                }, 0)\r\n              }}\r\n            />\r\n            <img\r\n              style={{ display: `${!show ? \"none\" : \"block\"}` }}\r\n              className='eye eye2'\r\n              src={eye}\r\n              alt='eye'\r\n              draggable='false'\r\n              onClick={() => {\r\n                inputRef.current.focus()\r\n                setShow(!show)\r\n                setTimeout(function () {\r\n                  inputRef.current.selectionStart = inputRef.current.selectionEnd = 10000\r\n                }, 0)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='password'>\r\n            <label htmlFor='confirmPassword'>Confirm Password</label>\r\n            <input\r\n              ref={inputRef2}\r\n              value={confirmPasswordValue}\r\n              id='confirmPassword'\r\n              type={`${show ? \"text\" : \"password\"}`}\r\n              onChange={(e) => setConfirmPasswordValue(e.target.value)}\r\n            />\r\n            <img\r\n              style={{ display: `${show ? \"none\" : \"block\"}` }}\r\n              className='eye eye1'\r\n              src={closedEye}\r\n              alt='closedEye'\r\n              draggable='false'\r\n              onClick={() => {\r\n                inputRef2.current.focus()\r\n                setShow(!show)\r\n                setTimeout(function () {\r\n                  inputRef2.current.selectionStart = inputRef2.current.selectionEnd = 10000\r\n                }, 0)\r\n              }}\r\n            />\r\n            <img\r\n              style={{ display: `${!show ? \"none\" : \"block\"}` }}\r\n              className='eye eye2'\r\n              src={eye}\r\n              alt='eye'\r\n              draggable='false'\r\n              onClick={() => {\r\n                inputRef2.current.focus()\r\n                setShow(!show)\r\n                setTimeout(function () {\r\n                  inputRef2.current.selectionStart = inputRef2.current.selectionEnd = 10000\r\n                }, 0)\r\n              }}\r\n            />\r\n          </div>\r\n          <button type='submit'>\r\n            Send\r\n            {reset2Loading && <Loader />}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </StyledReset>\r\n  )\r\n}\r\nconst StyledReset = styled.div`\r\n  .ForgotLink {\r\n    color: rgba(113, 43, 41, 0.9);\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: rgba(113, 43, 41, 1);\r\n    }\r\n  }\r\n  .message {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 35%;\r\n\r\n  h1 {\r\n    color: #1a1a1a;\r\n    font-weight: 500;\r\n    font-size: calc(2rem + 1vw);\r\n  }\r\n  .content {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    margin-bottom: 0.5rem;\r\n    width: 100%;\r\n    max-width: 606px;\r\n  }\r\n  .eye2 {\r\n    transform: translate(-50%, 8%) !important;\r\n  }\r\n  .eye {\r\n    position: absolute;\r\n    right: 0%;\r\n    top: 50%;\r\n    transform: translate(-50%, -6%);\r\n    width: calc(1.8rem + 0.3vw);\r\n    cursor: pointer;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    justify-content: center;\r\n    h1 {\r\n      color: #1a1a1a;\r\n      font-weight: 500;\r\n      font-size: calc(2rem + 1vw);\r\n    }\r\n    .signInDiv {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n    }\r\n    .email,\r\n    .password,\r\n    .name {\r\n      position: relative;\r\n      width: 100%;\r\n      input {\r\n        background: #f3f3f3;\r\n        border: none;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 6px;\r\n        width: 100%;\r\n        font-size: calc(1rem + 0.3vw);\r\n      }\r\n      label {\r\n        font-size: calc(1rem + 0.3vw);\r\n        color: #343a40;\r\n      }\r\n    }\r\n    button {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 0.35rem 1.2rem;\r\n      border: none;\r\n      background: #00b2d8;\r\n      color: white;\r\n      border-radius: 6px;\r\n      font-size: calc(1.2rem + 0.3vw);\r\n      cursor: pointer;\r\n      transition: 0.1s;\r\n      &:hover {\r\n        background: #00a8ce;\r\n      }\r\n      #loader:first-child {\r\n        width: calc(0.9rem + 0.5vw);\r\n        height: calc(0.9rem + 0.5vw);\r\n        margin-left: 0.45rem;\r\n        #greybackground path {\r\n          stroke: white;\r\n        }\r\n      }\r\n    }\r\n    #email,\r\n    #password,\r\n    #confirmPassword,\r\n    #name {\r\n      margin-bottom: 1rem;\r\n      margin-top: 0.3rem;\r\n      padding-right: 2.8rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1050px) {\r\n    width: 90%;\r\n    .eye {\r\n      position: absolute;\r\n      right: 0%;\r\n      top: 50%;\r\n      cursor: pointer;\r\n      padding: 0.6rem;\r\n      transform: translate(-18%, -36%);\r\n      width: calc(2.8rem + 1vw);\r\n    }\r\n    .eye2 {\r\n      transform: translate(-18%, -35%) !important;\r\n    }\r\n    .message {\r\n      padding: 0.5rem 0.7rem !important;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ResetPassword\r\n"],"sourceRoot":""}